"Document Title",Authors,"Author Affiliations","Publication Title",Date Added To Xplore,"Publication Year","Volume","Issue","Start Page","End Page","Abstract","ISSN",ISBNs,"DOI",Funding Information,PDF Link,"Author Keywords","IEEE Terms","INSPEC Controlled Terms","INSPEC Non-Controlled Terms","Mesh_Terms",Article Citation Count,Patent Citation Count,"Reference Count","License",Online Date,Issue Date,"Meeting Date","Publisher",Document Identifier
"Verification of system-wide safety properties of ROS applications","R. Carvalho; A. Cunha; N. Macedo; A. Santos","Universidade do Minho and INESC TEC, Portugal; Universidade do Minho and INESC TEC, Portugal; Universidade do Minho and INESC TEC, Portugal; Universidade do Minho and INESC TEC, Portugal","2020 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS)","10 Feb 2021","2020","","","7249","7254","Robots are currently deployed in safety-critical domains but proper techniques to assess the functional safety of their software are yet to be adopted. This is particularly critical in ROS, where highly configurable robots are built by composing third-party modules. To promote adoption, we advocate the use of lightweight formal methods, automatic techniques with minimal user input and intuitive feedback. This paper proposes a technique to automatically verify system-wide safety properties of ROS-based applications at static time. It is based in the formalization of ROS architectural models and node behaviour in Electrum, over which system-wide specifications are subsequently model checked. To automate the analysis, it is deployed as a plug-in for HAROS, a framework for the assessment of ROS software quality aimed at the ROS community. The technique is evaluated in a real robot, AgRob V16, with positive results.","2153-0866","978-1-7281-6212-6","10.1109/IROS45743.2020.9341085","European Regional Development Fund; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9341085","","Scalability;Software quality;Computer architecture;Model checking;Safety;Middleware;Intelligent robots","control engineering computing;formal specification;formal verification;program verification;robots;safety-critical software;software quality","functional safety;highly configurable robots;lightweight formal methods;automatic techniques;minimal user input;system-wide safety properties;ROS-based applications;ROS architectural models;system-wide specifications;ROS software quality;ROS community;ROS applications;safety-critical domains;proper techniques","","7","","12","IEEE","10 Feb 2021","","","IEEE","IEEE Conferences"
"A Formal Model-Based Design Method for Robotic Systems","R. Wang; Y. Guan; H. Song; X. Li; X. Li; Z. Shi; X. Song","Beijing Advanced Innovation Center for Imaging Technology, Capital Normal University, Beijing, China; Beijing Advanced Innovation Center for Imaging Technology, Capital Normal University, Beijing, China; Department of Electrical, Computer, Software, and Systems Engineering, Embry-Riddle Aeronautical University, Daytona Beach, FL, USA; Beijing Advanced Innovation Center for Imaging Technology, Capital Normal University, Beijing, China; Beijing Advanced Innovation Center for Imaging Technology, Capital Normal University, Beijing, China; Beijing Advanced Innovation Center for Imaging Technology, Capital Normal University, Beijing, China; Portland State University, Portland, OR, USA","IEEE Systems Journal","24 Feb 2019","2019","13","1","1096","1107","The model-based approach has been widely applied to the design of software. However, most of these approaches depend on simulation and manual code implementation, which reduces the efficiency and quality of software. In this paper, we present a new model-based approach, which automatically generates the executable C++ code running on the popular Robot Operation System (ROS). Our approach consists of three phases: modeling, verification, and automatic code generation. In the modeling phase, the internal interaction behaviors of robot systems are modeled as a network of timed automata. In the verification phase, the safety requirements are formalized and verified. In the code generation phase, a code generation tool can generate executable C++ code from the verified timed automata model. It bridges the gap between the formal model and the error-prone system implementation. Compared with existing method, the code generator provides the abstractions and mapping of ROS instructions, which realize the seamless connection between the generated code and ROS. The tool also supports most of the complex structures and advanced features of timed automata such as timer, committed location, and synchronous action. For evaluation, a real-industrial robot application of grasping a cup is conducted using our model-based design method, and the generated code can be directly deployed and successfully accomplishes the grasping task.","1937-9234","","10.1109/JSYST.2018.2867285","National Natural Science Foundation of China(grant numbers:61877040,61572331,61602326,61702348); National Key R & D Plan(grant numbers:2017YFB1301100); Sci-Tech Innovation – Fundamental Scientific Research Funds(grant numbers:025185305000); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8464674","Automatic code generation;model-based design;modeling;robot operating system;verification","Automata;Clocks;Tools;Safety;Testing;Software","automata theory;control engineering computing;formal specification;formal verification;industrial robots;mobile robots;program compilers","generated code;formal model-based design method;robotic systems;model-based approach;manual code implementation;executable C++ code;ROS;automatic code generation;modeling phase;robot systems;timed automata;verification phase;code generation phase;code generation tool;automata model;error-prone system implementation;code generator;real-industrial robot application;Robot Operation System","","29","","29","IEEE","13 Sep 2018","","","IEEE","IEEE Journals"
"Modular ROS Based Autonomous Mobile Industrial Robot System for Automated Intelligent Manufacturing Applications","R. C. Luo; S. L. Lee; Y. C. Wen; C. H. Hsu","Department of Electrical Engineering, National Taiwan University, Taipei, Taiwan; Department of Electrical Engineering, National Taiwan University, Taipei, Taiwan; Department of Electrical Engineering, National Taiwan University, Taipei, Taiwan; Department of Electrical Engineering, National Taiwan University, Taipei, Taiwan","2020 IEEE/ASME International Conference on Advanced Intelligent Mechatronics (AIM)","5 Aug 2020","2020","","","1673","1678","The objective of this paper is to develop a modular Robot Operating System (ROS) based autonomous mobile industrial robot system for automated intelligent manufacturing applications. We propose a finite state machine based method to integrate and manage various modular functions on the mobile manipulator which makes it have a great talent on mobility and manipulation. For mobility, we perform simultaneous localization and mapping (SLAM) on our robot to build a map and locate itself. We also develop navigation and collision avoidance strategies, so that it can navigate to anywhere it plans in the indoor environment. For manipulation, we use an RGB-D camera on the end effector to perform eye-in-hand system which given an image and point cloud, leveraging the learning-based object detection and shape-based grasping pose estimation to achieve flexible manipulation capabilities. In the experiments, we have developed an Autonomous Mobile Industrial Robot (AMIR) with a carefully designed mechanism and a fully modular ROS environment in our robotics lab at NTU. In the experiments, we construct an intelligent industrial scenario: collecting materials and delivering products from one place to another. Using our ROS based architecture to control the data/command flow between functions, we have successfully completed the demonstration of the system and proved the stability of the system.","2159-6255","978-1-7281-6794-7","10.1109/AIM43001.2020.9158800","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9158800","","Navigation;Service robots;Task analysis;Simultaneous localization and mapping;Three-dimensional displays;Collision avoidance","collision avoidance;control engineering computing;end effectors;finite state machines;flexible manipulators;image sensors;industrial robots;learning (artificial intelligence);manipulators;mobile robots;object detection;operating systems (computers);path planning;pose estimation;robot programming;robot vision;SLAM (robots)","ROS based architecture;intelligent industrial scenario;robotics lab;fully modular ROS environment;learning-based object detection;eye-in-hand system;mobile manipulator;modular functions;modular Robot Operating System;automated intelligent manufacturing applications;autonomous mobile industrial robot system","","3","","31","IEEE","5 Aug 2020","","","IEEE","IEEE Conferences"
"PlanSys2: A Planning System Framework for ROS2","F. Martín; J. G. Clavero; V. Matellán; F. J. Rodríguez","Intelligent Robotics Lab, Rey Juan Carlos University; Intelligent Robotics Lab, Rey Juan Carlos University; Robotics Group, University of León; Robotics Group, University of León","2021 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS)","16 Dec 2021","2021","","","9742","9749","Autonomous robots need to plan the tasks they carry out to fulfill their missions. The missions’ increasing complexity does not let human designers anticipate all the possible situations, so traditional control systems based on state machines are not enough. This paper contains a description of the ROS2 Planning System (PlanSys2 in short), a framework for symbolic planning that incorporates novel approaches for execution on robots working in demanding environments. PlanSys2 aims to be the reference task planning framework in ROS2, the latest version of the de facto standard in robotics software development. Among its main features, it can be highlighted the optimized execution, based on Behavior Trees, of plans through a new actions auction protocol and its multi-robot planning capabilities. It already has a small but growing community of users and developers, and this document is a summary of the design and capabilities of this project.","2153-0866","978-1-6654-1714-3","10.1109/IROS51168.2021.9636544","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9636544","","Protocols;Control systems;Software;Planning;Complexity theory;Task analysis;Standards","mobile robots;multi-robot systems;operating systems (computers);planning (artificial intelligence);robot programming;software engineering","PlanSys2;symbolic planning;reference task planning framework;robotics software development;multirobot planning capabilities;planning system framework;autonomous robots;traditional control systems;ROS2 planning system","","9","","34","IEEE","16 Dec 2021","","","IEEE","IEEE Conferences"

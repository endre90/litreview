"Document Title",Authors,"Author Affiliations","Publication Title",Date Added To Xplore,"Publication Year","Volume","Issue","Start Page","End Page","Abstract","ISSN",ISBNs,"DOI",Funding Information,PDF Link,"Author Keywords","IEEE Terms","INSPEC Controlled Terms","INSPEC Non-Controlled Terms","Mesh_Terms",Article Citation Count,Patent Citation Count,"Reference Count","License",Online Date,Issue Date,"Meeting Date","Publisher",Document Identifier
"A Modeling Tool for Reconfigurable Skills in ROS","D. Bozhinoski; E. Aguado; M. G. Oviedo; C. Hernandez; R. Sanz; A. Wąsowski","Cognitive Robotics, TU Delft; Universidad Politécnica de Madrid, Centre for Automation and Robotics; Cognitive Robotics, TU Delft; Universidad Politécnica de Madrid, Centre for Automation and Robotics; Cognitive Robotics, TU Delft; Software Quality Research, IT University of Copenhagen","2021 IEEE/ACM 3rd International Workshop on Robotics Software Engineering (RoSE)","9 Jul 2021","2021","","","25","28","Known attempts to build autonomous robots rely on complex control architectures, often implemented with the Robot Operating System platform (ROS). The implementation of adaptable architectures is very often ad hoc, quickly gets cumbersome and expensive. Reusable solutions that support complex, runtime reasoning for robot adaptation have been seen in the adoption of ontologies. While the usage of ontologies significantly increases system reuse and maintainability, it requires additional effort from the application developers to translate requirements into formal rules that can be used by an ontological reasoner. In this paper, we present a design tool that facilitates the specification of reconfigurable robot skills. Based on the specified skills, we generate corresponding runtime models for self-adaptation that can be directly deployed to a running robot that uses a reasoning approach based on ontologies. We demonstrate the applicability of the tool in a real robot performing a patrolling mission at a university campus.","","978-1-6654-4474-3","10.1109/RoSE52553.2021.00011","RobMoSys-ITP-MROS(grant numbers:732410); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9474550","self adaptive systems;autonomous robots;domain specific language;ontologies;ROS2 tool","Runtime;Operating systems;Conferences;Computer architecture;Tools;Ontologies;Cognition","inference mechanisms;mobile robots;multi-robot systems;ontologies (artificial intelligence);operating systems (computers);robot programming","application developers;formal rules;ontological reasoner;design tool;reconfigurable robot skills;running robot;modeling tool;ROS;autonomous robots;complex control architectures;robot operating system platform;adaptable architectures;reusable solutions;runtime reasoning;robot adaptation;system reuse;maintainability;patrolling mission;University campus","","1","","5","IEEE","9 Jul 2021","","","IEEE","IEEE Conferences"
"Design Patterns in Building Software for a Middle Size League Robot Using Robot Operating System","A. Widyaputra; K. Mutijarsa","School of Electrical Engineering and Informatics, Bandung Institute of Technology, Bandung 40132, West Java, Indonesia; School of Electrical Engineering and Informatics, Bandung Institute of Technology, Bandung 40132, West Java, Indonesia","2018 International Conference on Information Technology Systems and Innovation (ICITSI)","25 Apr 2019","2018","","","318","323","There are many ways to build the software for a Middle Size League (MSL) robot. A common problem in developing software for any long-term project including MSL is enabling future developers to maintain and continue further research on the project. A solution to this problem is to use an already existing software development framework. In recent years, the Robot Operating System (ROS) has become the 'de facto' standard framework for robotics software development. This paper will explore the advantages found in using ROS as the framework to build a software for a robot The three main advantages that were found in using ROS are data sharing, hardware abstraction, and program concurrency. These advantages allowed the team to build modular software that is more maintainable. Furthermore, there was minimum computation cost found in using ROS. Lastly, the locomotion system was tested. When given a linear movement command, the locomotion system has an average actual distance error of 8.84 cm with a standard deviation of 6.70 cm. It is also found that the average computed error is 3.54 cm with a standard deviation of 1.49 cm.","","978-1-5386-5693-8","10.1109/ICITSI.2018.8696085","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8696085","Middle Size League (MSL);Robot Operating System (ROS);data sharing;hardware abstraction;program concurrency","Peer-to-peer computing;Mobile robots;Software;Hardware;Buildings;Wheels","control engineering computing;multi-robot systems;robot programming;software engineering","design patterns;building software;long-term project;future developers;existing software development framework;ROS;de facto standard framework;robotics software development;main advantages;modular software;locomotion system;standard deviation;middle size league robot;robot operating system;MSL robot;size 8.84 cm;size 6.7 cm;size 3.54 cm;size 1.49 cm","","","","17","IEEE","25 Apr 2019","","","IEEE","IEEE Conferences"
"Behavioral Analysis of ROS motion planners integrated with Robotics Middleware Framework (RMF)","M. Deshpande; N. Kamalanathan","Department of Mechanical Engineering, Shri Ramdeobaba College of Engineering and Management, Nagpur, India; Department of Perception and Planning, Codelattice Labs Pvt. Ltd, Ernakulam, India","2022 IEEE 4th International Conference on Cybernetics, Cognition and Machine Learning Applications (ICCCMLA)","22 Dec 2022","2022","","","196","199","Robot operating system (ROS) is one of the most popular middleware for robot applications, being integrated with the majority of projects in robotics. Since the rollout of ROS2 having an improved communication stack than ROS1 with its real-time data distribution service (DDS) protocol, the problem of robot interoperability has been one of the most sought problems. Although many different multi-robot management frameworks have been developed, only a few of them are open-sourced. In this paper, we present a study that evaluates one such interoperability framework called “Robotics Middleware Framework (RMF)”. Herein, RMF is integrated with “Free Fleet” an open-source robot fleet management system and tested with various path planning algorithms on different possible real-world test scenarios. The outcome of this study gives an insight into the performance of path planners in complex scenarios.","","978-1-6654-6246-4","10.1109/ICCCMLA56841.2022.9989028","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9989028","Robot operating system;Robotics middleware framework;Autonomous mobile robots;multi-robot navigation","Protocols;Machine learning algorithms;Navigation;Operating systems;Machine learning;Real-time systems;Path planning","control engineering computing;middleware;mobile robots;multi-robot systems;open systems;operating systems (computers);path planning","behavioral analysis;data distribution service protocol;improved communication stack;interoperability framework;multirobot management frameworks;open-source robot fleet management system;path planning algorithms;RMF;robot interoperability;robot operating system;robotics middleware framework;ROS motion planners","","","","8","IEEE","22 Dec 2022","","","IEEE","IEEE Conferences"
"A Self-Driving Car Architecture in ROS2","M. Reke; D. Peter; J. Schulte-Tigges; S. Schiffer; A. Ferrein; T. Walter; D. Matheis","Mobile Autonomous Systems & Cognitive Robotics Institute, FH Aachen University of Applied Sciences, Aachen, Germany; Mobile Autonomous Systems & Cognitive Robotics Institute, FH Aachen University of Applied Sciences, Aachen, Germany; Mobile Autonomous Systems & Cognitive Robotics Institute, FH Aachen University of Applied Sciences, Aachen, Germany; Mobile Autonomous Systems & Cognitive Robotics Institute, FH Aachen University of Applied Sciences, Aachen, Germany; Mobile Autonomous Systems & Cognitive Robotics Institute, FH Aachen University of Applied Sciences, Aachen, Germany; Electronics System Development, Advanced Safety Control, Hyundai Motor Europe Technical Center GmbH, Ruesselsheim, Germany; Electronics System Development, Advanced Safety Control, Hyundai Motor Europe Technical Center GmbH, Ruesselsheim, Germany","2020 International SAUPEC/RobMech/PRASA Conference","19 Mar 2020","2020","","","1","6","In this paper we report on an architecture for a self-driving car that is based on ROS2. Self-driving cars have to take decisions based on their sensory input in real-time, providing high reliability with a strong demand in functional safety. In principle, self-driving cars are robots. However, typical robot software, in general, and the previous version of the Robot Operating System (ROS), in particular, does not always meet these requirements. With the successor ROS2 the situation has changed and it might be considered as a solution for automated and autonomous driving. Existing robotic software based on ROS was not ready for safety critical applications like self-driving cars. We propose an architecture for using ROS2 for a self-driving car that enables safe and reliable real-time behaviour, but keeping the advantages of ROS such as a distributed architecture and standardised message types. First experiments with an automated real passenger car at lower and higher speed-levels show that our approach seems feasible for autonomous driving under the necessary real-time conditions.","","978-1-7281-4162-6","10.1109/SAUPEC/RobMech/PRASA48453.2020.9041020","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9041020","Self-driving car;autonomous driving;architecture;robot operating system;ROS;ROS2;LKAS;V2X","Software architecture;Computer architecture;Robot sensing systems;Real-time systems;Software;Sensor systems;Autonomous automobiles","automobiles;control engineering computing;mobile robots;operating systems (computers);safety-critical software","ROS2;autonomous driving;robotic software;self-driving cars;automated real passenger car;self-driving car architecture;robot operating system","","25","","23","IEEE","19 Mar 2020","","","IEEE","IEEE Conferences"
"CompROS: A composable ROS2 based architecture for real-time embedded robotic development","S. Dehnavi; M. Koedam; A. Nelson; D. Goswami; K. Goossens","Department of Electrical Engineering, Eindhoven University of Technology, The Netherlands; Department of Electrical Engineering, Eindhoven University of Technology, The Netherlands; Department of Electrical Engineering, Eindhoven University of Technology, The Netherlands; Department of Electrical Engineering, Eindhoven University of Technology, The Netherlands; Department of Electrical Engineering, Eindhoven University of Technology, The Netherlands","2021 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS)","16 Dec 2021","2021","","","6449","6455","Robot Operating System (ROS) is a de-facto standard robot middleware in many academic and industrial use cases. However, utilizing ROS/ROS2 in safety-critical embedded applications with real-time requirement is challenging because of C1) Non-real-time underlying hardware, C2) No control on the host OS scheduler, C3) Unpredictable dynamic memory allocation, C4) High resource requirement, and C5) Unpredictable execution model for ROS nodes. In this paper, we address these limiting factors by proposing a hardwaresoftware architecture -CompROS- for ROS2 based robotic development in a Multi-Processor System on Chip (MPSoC) platform. The proposed hardware architecture consists of a Hard Real-Time (HRT) RISC-V based subsystem implemented in the Programmable Logic (PL) part of the MPSoC platform, a Soft Real-Time (SRT) ARM-based subsystem in the Processing System (PS) part of the MPSoC platform, and a Non-Real-Time (NRT) PC. While the proposed hardware architecture along with a partitioning layer overcomes the first two limiting factors, the rest are managed by the proposed multi-layer software architecture. We make a bare-metal implementation of XRCE-DDS standard for PL-PS communication, while peer-to-peer PL-PL communication is done through a proposed real-time publish-subscribe approach. The reliable communication for PS-PL communication is done through utilizing C-HEAP protocol. Further, we integrate ROS2 software layers on top of the proposed hardware and software layers. Finally, with respect to C5, we present a real-time execution model of ROS2 nodes by a mapping of ROS2 entities to CompROS entities, which is validated through experimental results. We run ROS2 middleware with an executable size of less than 200 KB on an MPSoC platform.","2153-0866","978-1-6654-1714-3","10.1109/IROS51168.2021.9636590","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9636590","Robotics;ROS2;Real-time;Embedded System","Limiting;Software architecture;Service robots;Real-time systems;Hardware;Peer-to-peer computing;System-on-chip","control engineering computing;embedded systems;middleware;multiprocessing systems;operating systems (computers);robot programming;scheduling;software architecture;system-on-chip","composable ROS2 based architecture;real-time embedded robotic development;de-facto standard robot middleware;safety-critical embedded applications;host OS scheduler;C5;ROS nodes;multiprocessor system;Chip platform;programmable logic part;MPSoC platform;multilayer software architecture;XRCE-DDS standard;PL-PS communication;PL-PL communication;PS-PL communication;ROS2 software layers;real-time execution model;ROS2 nodes;ROS2 middleware;hardwaresoftware architecture;CompROS;robot operating system;hard real-time RISC-V based subsystem;soft real-time ARM-based subsystem;nonreal-time PC","","3","","34","IEEE","16 Dec 2021","","","IEEE","IEEE Conferences"
"The High-Assurance ROS Framework","A. Santos; A. Cunha; N. Macedo","High-Assurance Software Laboratory, INESC TEC & University of Minho, Braga, Portugal; High-Assurance Software Laboratory, INESC TEC & University of Minho, Braga, Portugal; High-Assurance Software Laboratory, INESC TEC & University of Minho, Braga, Portugal","2021 IEEE/ACM 3rd International Workshop on Robotics Software Engineering (RoSE)","9 Jul 2021","2021","","","37","40","This tool paper presents the High-Assurance ROS (HAROS) framework. HAROS is a framework for the analysis and quality improvement of robotics software developed using the popular Robot Operating System (ROS). It builds on a static analysis foundation to automatically extract models from the source code. Such models are later used to enable other sorts of analyses, such as Model Checking, Runtime Verification, and Property-based Testing. It has been applied to multiple real-world examples, helping developers find and correct various issues.","","978-1-6654-4474-3","10.1109/RoSE52553.2021.00013","Portuguese funding agency, FCT - Fundação para a Ciência e a Tecnologia; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9474545","static analysis;lightweight formal methods;software engineering;robot operating system","Analytical models;Runtime;Operating systems;Static analysis;Model checking;Tools;Software","control engineering computing;operating systems (computers);program diagnostics;program testing;program verification;robot programming","HAROS;static analysis foundation;model checking;robot operating system;high-assurance ROS;quality improvement;robotics software;source code;runtime verification;property-based testing","","3","","15","IEEE","9 Jul 2021","","","IEEE","IEEE Conferences"
"ROS-MAGNA, a ROS-based framework for the definition and management of multi-UAS cooperative missions","J. A. Millan-Romera; H. Perez-Leon; A. Castillejo-Calle; I. Maza; A. Ollero","Robotics, Vision and Control Group, University of Seville, Sevilla, Spain; Robotics, Vision and Control Group, University of Seville, Sevilla, Spain; Robotics, Vision and Control Group, University of Seville, Sevilla, Spain; Robotics, Vision and Control Group, University of Seville, Sevilla, Spain; Robotics, Vision and Control Group, University of Seville, Sevilla, Spain","2019 International Conference on Unmanned Aircraft Systems (ICUAS)","15 Aug 2019","2019","","","1477","1486","This paper presents a general framework for the definition and management of cooperative missions for multiple Unmanned Aircraft Systems (UAS) based on the Robot Operating System (ROS). This framework makes transparent the type of autopilot on-board and creates the state machines that control the behaviour of the different UAS from the specification of the multi-UAS mission. In addition, it integrates a virtual world generation tool to manage the information of the environment and visualize the geometrical objects of interest to properly follow the progress of the mission. The framework supports the coexistence of software-in-the-loop, hardware-in-the-loop and real UAS cooperating in the same arena, being a very useful testing tool for the developer of UAS advanced functionalities. To the best of our knowledge, it is the first framework which endows all these capabilities. The paper also includes simulations and real experiments which show the main features of the framework.","2575-7296","978-1-7281-0333-4","10.1109/ICUAS.2019.8797829","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8797829","Mutiple UAS;Robot Operating System;Simulation","Tools;Computer architecture;Task analysis;Software;Monitoring;Unmanned aerial vehicles","aerospace computing;autonomous aerial vehicles;control engineering computing;mobile robots;multi-robot systems;operating systems (computers)","ROS-based framework;autopilot on-board;multiUAS mission;virtual world generation tool;multiple unmanned aircraft systems;robot operating system;ROS-MAGNA framework","","8","","17","IEEE","15 Aug 2019","","","IEEE","IEEE Conferences"
"Documentation and Modeling of ROS Systems","W. R. Drumheller; D. C. Conner","Department of Physics, Computer Science and Engineering, Capable Humanitarian Robotics and Intelligent Systems Lab (CHRISLab), Christopher Newport University, Newport News, VA; Department of Physics, Computer Science and Engineering, Capable Humanitarian Robotics and Intelligent Systems Lab (CHRISLab), Christopher Newport University, Newport News, VA","SoutheastCon 2021","21 Apr 2021","2021","","","1","7","The Robot Operating System (ROS) is frequently used to develop complex robotic systems with many interacting software components. While ROS provides several tools for visualizing active ROS deployments, it lacks tools for Model-Based Engineering (MBE) during the development stage, and ROS lacks tools for easily documenting the interfaces and deployed components other than specific configuration and launch files themselves. This paper presents a software tool chain - dubbed CHRIS ROS Modeling - that enables users to document an existing ROS deployment. The information is stored as instances of a simplified metamodel in portable formats. The resulting information serves to document an existing system and will serve as the foundation for future work to develop an integrated MBE system. This paper compares our approach to similar approaches currently in development.","1558-058X","978-1-6654-0379-5","10.1109/SoutheastCon45413.2021.9401832","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9401832","","Visualization;System testing;Computational modeling;Documentation;Tools;US Department of Transportation;Portable document format","control engineering computing;mobile robots;object-oriented programming;operating systems (computers);robot programming;software architecture;software tools","ROS systems;complex robotic systems;software components;active ROS deployments;model-based engineering;specific configuration;launch files;software tool chain;CHRIS ROS Modeling;integrated MBE system;robot operating system","","1","","14","IEEE","21 Apr 2021","","","IEEE","IEEE Conferences"
"Interoperability Between ROS and OPC UA: A Local Cloud-Based Approach","A. Tripathy; J. van Deventer; C. Paniagua; J. Delsing","Dept. of Computer Science, Electrical and Space Engineering, Luleå University of Technology, Luleå, Sweden; Dept. of Computer Science, Electrical and Space Engineering, Luleå University of Technology, Luleå, Sweden; Dept. of Computer Science, Electrical and Space Engineering, Luleå University of Technology, Luleå, Sweden; Dept. of Computer Science, Electrical and Space Engineering, Luleå University of Technology, Luleå, Sweden","2022 IEEE 5th International Conference on Industrial Cyber-Physical Systems (ICPS)","18 Jul 2022","2022","","","1","5","Today's manufacturing industries use a large suite of protocols and technologies to operate heterogeneous devices and software modules. Some of the most widely used technologies in industrial production are OPC UA (Open Platform Communications Unified Architecture) and ROS (Robot Operating System). Hence, enabling interoperability across these technologies is critical to ensure a smooth production flow. We propose a local cloud-based approach to achieve interoperability between ROS and OPC UA by integrating them with the Eclipse Arrowhead Framework. This integration allows these technologies to operate as independent systems while communicating securely at runtime. In addition to achieving interoperability, this integration supports important industrial aspects such as loose coupling, late binding, and cyber-security, making it a flexible solution.","","978-1-6654-9770-1","10.1109/ICPS51978.2022.9816962","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9816962","ROS;OPC UA;Eclipse Arrowhead Framework","Manufacturing industries;Couplings;Runtime;Protocols;Operating systems;Conferences;Production","cloud computing;manufacturing industries;open systems;service-oriented architecture","Eclipse Arrowhead Framework;independent systems;achieving interoperability;important industrial aspects;ROS;OPC UA;heterogeneous devices;software modules;industrial production;Open Platform Communications Unified Architecture;Robot Operating System;smooth production flow;local cloud-based approach","","","","14","IEEE","18 Jul 2022","","","IEEE","IEEE Conferences"
"Generic ROS-based Architecture for Heterogeneous Multi-Autonomous Systems Development","M. Alberri; S. Hegazy; M. Badra; M. Nasr; O. M. Shehata; E. I. Morgan","Multi-Robot Systems (MRS) Research Group, German University in Cairo, Cairo, Egypt; Multi-Robot Systems (MRS) Research Group, German University in Cairo, Cairo, Egypt; Multi-Robot Systems (MRS) Research Group, German University in Cairo, Cairo, Egypt; Multi-Robot Systems (MRS) Research Group, German University in Cairo, Cairo, Egypt; Multi-Robot Systems (MRS) Research Group, German University in Cairo, Cairo, Egypt; Multi-Robot Systems (MRS) Research Group, German University in Cairo, Cairo, Egypt","2018 IEEE International Conference on Vehicular Electronics and Safety (ICVES)","4 Nov 2018","2018","","","1","6","Autonomous systems have been considered a strong field of attraction to the research community in the last few decades. Accordingly, this paper proposes a design and implementation of a generalized Robot Operating System (ROS) based architecture applicable for multi-autonomous systems in heterogeneous environments. The architecture allows inter-robotic data exchange for Vehicle-to-Vehicle communication by integrating embedded systems into the architecture structure. Moreover, the proposed architecture is a hierarchical one composed of three layers connected through various communication protocols, and characterized by being affordable, powerful and expansible. The architecture has been tested on three different platforms; autonomous mobile robot, autonomous vehicle and autonomous quad-copter. Results of the conducted experiments showed stability and successful operation of the proposed architecture.","","978-1-5386-3543-8","10.1109/ICVES.2018.8519589","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8519589","Hierarchical architecture;ROS-based;Embedded Systems;Autonomous Systems;Multi-robotic systems","Computer architecture;Robot sensing systems;Mobile robots;Software;Autonomous systems;Task analysis","control engineering computing;embedded systems;mobile robots;multi-robot systems;robot programming","generic ROS-based architecture;heterogeneous multiautonomous systems development;autonomous systems;research community;generalized Robot Operating System based architecture applicable;heterogeneous environments;inter-robotic data exchange;Vehicle-to-Vehicle communication;embedded systems;architecture structure;autonomous mobile robot;autonomous vehicle;autonomous quad-copter","","10","","14","IEEE","4 Nov 2018","","","IEEE","IEEE Conferences"
"A Container-Based Framework for Developing ROS Applications","P. Melo; R. Arrais; S. Teixeira; G. Veiga","FEUP Campus, Rua Dr. Roberto Frias, INESC TEC - INESC Technology and Science, Porto, Portugal; FEUP Campus, Rua Dr. Roberto Frias, INESC TEC - INESC Technology and Science, Porto, Portugal; FEUP Campus, Rua Dr. Roberto Frias, INESC TEC - INESC Technology and Science, Porto, Portugal; FEUP Campus, Rua Dr. Roberto Frias, INESC TEC - INESC Technology and Science, Porto, Portugal","2022 IEEE 20th International Conference on Industrial Informatics (INDIN)","15 Dec 2022","2022","","","280","285","Modern software engineering practices to enable reproducible and easy to deploy robotics solutions have been embraced in recent years, leading to an increasing adoption of container technologies within the Robot Operating System (ROS) community. However, there is still no common procedure or tools for creating, testing, and deploying containerized ROS packages. A common way to work with containerized ROS applications would prove beneficial by increasing even more the level of collaboration among development teams, help in reusing existing solutions, and automate the development of new ones. This paper presents a software framework to support the development of ROS applications using Docker containers, across all its stages. Besides containerizing ROS packages, the presented tool also assists in the deployment of containerized solutions as well as the creation of complex simulation environments for testing. The tool also provides a way for these simulations to be assessed at run-time using a property-specific language targeting ROS applications. An industrial and a scientific scenario are presented to portray the usage of the proposed tool.","","978-1-7281-7568-3","10.1109/INDIN51773.2022.9976083","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9976083","ROS;Docker;Software Engineering","Operating systems;Collaboration;Containers;Software;Informatics;Robots;Testing","cloud computing;control engineering computing;operating systems (computers);robot programming;software engineering;specification languages","container technologies;container-based framework;development teams;Docker containers;property-specific language;robot operating system;ROS;software engineering;software framework","","","","21","IEEE","15 Dec 2022","","","IEEE","IEEE Conferences"
"Pushing ROS towards the Dark Side: A ROS-based Co-Simulation Architecture for Mixed-Reality Test Systems for Autonomous Vehicles","M. R. Zofka; L. Töttel; M. Zipfl; M. Heinrich; T. Fleck; P. Schulz; J. M. Zöllner","Department of Technical Cognitive Assistance Systems, FZI Research Center for Information Technology, Karlsruhe, Germany; Department of Technical Cognitive Assistance Systems, FZI Research Center for Information Technology, Karlsruhe, Germany; Department of Technical Cognitive Assistance Systems, FZI Research Center for Information Technology, Karlsruhe, Germany; Department of Technical Cognitive Assistance Systems, FZI Research Center for Information Technology, Karlsruhe, Germany; Department of Technical Cognitive Assistance Systems, FZI Research Center for Information Technology, Karlsruhe, Germany; Department of Microelectronic System Design (SiM), FZI Research Center for Information Technology, Karlsruhe, Germany; Department of Technical Cognitive Assistance Systems, FZI Research Center for Information Technology, Karlsruhe, Germany","2020 IEEE International Conference on Multisensor Fusion and Integration for Intelligent Systems (MFI)","26 Oct 2020","2020","","","204","211","Validation and verification of autonomous vehicles is still an unsolved problem. Although virtual approaches promise a cost efficient and reproducible solution, a most comprehensive and realistic representation of the real world traffic domain is required in order to make valuable statements about the performance of a highly automated driving (HAD) function. Models from different domain experts offer a repository of such representations. However, these models must be linked together for an extensive and uniform mapping of real world traffic domain for HAD performance assessment.Hereby, we propose the concept of a co-simulation architecture built upon the Robot Operating System (ROS) for both coupling and for integration of different domain expert models, immersion and stimulation of real pedestrians as well as AD systems into a common test system. This enables a unified way of generating ground truth for the performance assessment of multi-sensorial AD systems. We demonstrate the applicability of the ROS powered co-simulation by coupling behavior models in our mixed reality environment.","","978-1-7281-6422-9","10.1109/MFI49285.2020.9235238","Ministry of Economic Affairs; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9235238","","","control engineering computing;mobile robots;operating systems (computers);robot programming;traffic engineering computing;virtual reality","domain expert models;mixed reality environment;coupling behavior models;multisensorial AD systems;common test system;Robot Operating System;HAD performance assessment;uniform mapping;highly automated driving function;virtual approaches;autonomous vehicles;mixed-reality test systems;ROS-based Co-Simulation Architecture","","9","","35","IEEE","26 Oct 2020","","","IEEE","IEEE Conferences"
"A Software Architecture for Service Robots Manipulating Objects in Human Environments","C. Nam; S. Lee; J. Lee; S. H. Cheong; D. H. Kim; C. Kim; I. Kim; S. -K. Park","Robotics and Media Institute, Korea Institute of Science and Technology, Seoul, South Korea; Department of Computer Science, Kyonggi University, Suwon, South Korea; Robotics and Media Institute, Korea Institute of Science and Technology, Seoul, South Korea; Robotics and Media Institute, Korea Institute of Science and Technology, Seoul, South Korea; Robotics and Media Institute, Korea Institute of Science and Technology, Seoul, South Korea; Robotics and Media Institute, Korea Institute of Science and Technology, Seoul, South Korea; Department of Computer Science, Kyonggi University, Suwon, South Korea; Robotics and Media Institute, Korea Institute of Science and Technology, Seoul, South Korea","IEEE Access","2 Jul 2020","2020","8","","117900","117920","This paper presents a software architecture for robots providing manipulation services autonomously in human environments. In an unstructured human environment, a service robot often needs to perform tasks even without human intervention and prior knowledge about tasks and environments. For autonomous execution of tasks, varied processes are necessary such as perceiving environments, representing knowledge, reasoning with the knowledge, and planning for task and motion. While developing each of the processes is important, integrating them into a working system for deployment is also important as a robotic system can bring tangible outcomes when it works in real world. However, such an architecture has been rarely realized in the literature owing to the difficulties of a full integration, deployment, understanding high-level goals without human interventions. In this work, we suggest a software architecture that integrates the components necessary to perform tasks by a real robot without human intervention. We show our architecture composed of deep learning based perception, symbolic reasoning, AI task planning, and geometric motion planning. We implement a deep neural network that produces information about the environment, which are then stored in a knowledge base. We implement a reasoner that processes the knowledge to use the result for task planning. We show our implementation of the symbolic task planner that generates a sequence of motion predicates. We implement an interface that computes geometric information necessary for motion planning to execute the symbolic task plans. We describe the deployment of the architecture through the result of lab tests and a public demonstration. The architecture is developed based on Robot Operating System (ROS) so compatible with any robot that is capable of object manipulation and mobile navigation running in ROS. We deploy the architecture to two different robot platforms to show the compatibility.","2169-3536","","10.1109/ACCESS.2020.3003991","Development of ICT Technology Program of Institute for Information & Communications Technology Planning & Evaluation(grant numbers:2020-0-00096); Robot task planning for single and multiple robots connected to a cloud system; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9122008","Service robots;manipulation planning;AI reasoning methods","Task analysis;Planning;Computer architecture;Cognition;Robot kinematics;Service robots","control engineering computing;inference mechanisms;intelligent robots;learning (artificial intelligence);manipulators;mobile robots;neural nets;object detection;operating systems (computers);path planning;service robots;software architecture","deep neural network;ROS;robot operating system;autonomous execution;service robot;unstructured human environment;object manipulation;symbolic task planner;knowledge base;geometric motion planning;AI task planning;symbolic reasoning;deep learning based perception;software architecture;human intervention","","9","","76","CCBY","22 Jun 2020","","","IEEE","IEEE Journals"
"Modular ROS-based software architecture for reconfigurable, Industry 4.0 compatible robotic workcells","M. Simoni&#x0010D;; R. Pahi&#x0010D;; T. Ga&#x0161;par; S. Abdolshah; S. Haddadin; M. G. Catalano; F. W&#x00F6;rg&#x00F6;tter; A. Ude","Department of Automatics, Biocybernetics and Robotics, Jo&#x017E;ef Stefan Institute, Ljubljana, Slovenia; Department of Automatics, Biocybernetics and Robotics, Jo&#x017E;ef Stefan Institute, Ljubljana, Slovenia; Department of Automatics, Biocybernetics and Robotics, Jo&#x017E;ef Stefan Institute, Ljubljana, Slovenia; Department of Automatics, Biocybernetics and Robotics, Jo&#x017E;ef Stefan Institute, Ljubljana, Slovenia; Munich School of Robotics and Machine Intelligence, Technical University of Munich, Germany; Italian Insitute of Technology, Genoa, Italy; Bernstein Center for Computational Neuroscience, Georg-August-Universit&#x00E4;t, G&#x00F6;ttingen, Germany; Department of Automatics, Biocybernetics and Robotics, Jo&#x017E;ef Stefan Institute, Ljubljana, Slovenia","2021 20th International Conference on Advanced Robotics (ICAR)","5 Jan 2022","2021","","","44","51","In this paper we present a novel software architecture for flexible and modular robotic workcells. It aims at providing robot independent, ROS-based programming environment that reflects hardware modularity and enables plug-and-produce connectivity within the workcell both in hardware and software. The distinguishing property of the developed architecture is that it supports the development process at all levels and also enables easy workcell setup and adaptation. Interfaces for the programming of robot movements by kinesthetic teaching and high-level task programming based on FlexBE are provided to enable workcell programming also by non-robotic experts. While the proposed system was developed to facilitate the implementation of automated disassembly solutions, it is of interest also for other industrial processes where high degree of reconfigurability is required, e. g. for automated production of small batch size or one-of-a-kind products.","","978-1-6654-3684-7","10.1109/ICAR53236.2021.9659378","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9659378","","Service robots;Software architecture;Education;Production;Programming;Hardware;Software","assembling;control engineering computing;industrial robots;intelligent robots;mobile robots;operating systems (computers);production engineering computing;recycling;robot programming;software architecture","modular ROS-based software architecture;Industry 4.0 compatible robotic workcells;ROS-based programming environment;hardware modularity;robot movements;high-level task programming;workcell programming;nonrobotic experts;industrial processes;plug-and-produce connectivity;kinesthetic teaching;FlexBE;automated disassembly solutions","","1","","22","IEEE","5 Jan 2022","","","IEEE","IEEE Conferences"
"A Robotic Control System Using Robot Operating System and MATLAB for Sensor Fusion and Human-Robot Interaction","A. Y. R. Ruiz; B. Chandrasekaran","Department of Electrical & Computer Engineering, Florida Polytechnic University, Lakeland, Florida, USA; Department of Electrical & Computer Engineering, Florida Polytechnic University, Lakeland, Florida, USA","2020 10th Annual Computing and Communication Workshop and Conference (CCWC)","12 Mar 2020","2020","","","0550","0555","Human-robot interaction is a key aspect in the area of robotics. In this paper, the implementation of a sensor fusion based robotic control system architecture using Robot Operating System (ROS) and MATLAB is presented. Also, a few test cases under different scenarios is also highlighted for a robot navigation task and using the proposed architecture. The robotic system architecture was previously proposed and the work in this paper focuses on the implementation aspect of this architecture. This paper is a work in progress and more sensors and modules will continue to be interfaced and implemented as the research progresses.","","978-1-7281-3783-4","10.1109/CCWC47524.2020.9031184","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9031184","Sensor Fusion;Human-Robot Interaction;Control System Architecture;Motion Control;ROS/MATLAB Interface;Simulink;Sensors","Robot sensing systems;Matlab;Tutorials;Computer architecture;Software;Control systems","control engineering computing;human-robot interaction;Matlab;mobile robots;path planning;robot programming;sensor fusion","human-robot interaction;MATLAB;robot navigation task;robot operating system;sensor fusion based robotic control system architecture","","1","","15","IEEE","12 Mar 2020","","","IEEE","IEEE Conferences"
"Design of a Framework for Implementation of Industrial Robot Manipulation Using PLC and ROS 2","Z. Zhong; J. Zhang; C. Qiu; S. Huang","Ji Hua Laboratory, Engineer Research Center for Intelligent Robotics, Foshan, China; Ji Hua Laboratory, Engineer Research Center for Intelligent Robotics, Foshan, China; Jihua Laboratory), Engineer Research Center for Intelligent Robotics, Foshan, China; Jihua Laboratory), Engineer Research Center for Intelligent Robotics, Foshan, China","2022 2nd International Conference on Computer, Control and Robotics (ICCCR)","14 Jun 2022","2022","","","41","45","The paper describes the design and implementation of a robot manipulation system on a hardware platform based on a Programmable Logic Controller (PLC) and The Robot Operating System 2 (ROS 2). The controlled robot is a 6 degrees of freedom (DOF) manipulator, designed for high-performance pick and place applications in a picking work cell. The manipulating software system is developed on OpenPLC, an open-source PLC system, using its standard programming tools with the IEC 61131–3 standard and self-designed robot control features. In particular, the paper analyses the advantages and disadvantage of applying PLCs in applications such as fruit picking, compared with common industrial software systems on specialized hardware, with particular emphasis on the flexibility and automation to the proposed architecture.","","978-1-6654-6674-5","10.1109/ICCCR54399.2022.9790107","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9790107","robot manipulation;PLC;ROS 2;programmable control;software tools;software standards","Automation;Runtime;Service robots;Robot control;Computer architecture;Software systems;Manipulators","factory automation;IEC standards;industrial manipulators;programmable controllers;public domain software;robot programming","robot manipulation system;hardware platform;programmable logic controller;robot operating system 2;ROS 2;controlled robot;picking work cell;manipulating software system;open-source PLC system;standard programming tools;self-designed robot control features;fruit picking;industrial robot manipulation;IEC 61131-3 standard;high-performance pick and place application;6 degrees of freedom manipulator","","1","","10","IEEE","14 Jun 2022","","","IEEE","IEEE Conferences"

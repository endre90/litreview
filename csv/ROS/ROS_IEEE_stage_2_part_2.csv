"Document Title",Authors,"Author Affiliations","Publication Title",Date Added To Xplore,"Publication Year","Volume","Issue","Start Page","End Page","Abstract","ISSN",ISBNs,"DOI",Funding Information,PDF Link,"Author Keywords","IEEE Terms","INSPEC Controlled Terms","INSPEC Non-Controlled Terms","Mesh_Terms",Article Citation Count,Patent Citation Count,"Reference Count","License",Online Date,Issue Date,"Meeting Date","Publisher",Document Identifier
"A ROS2-Based Framework for Industrial Automation Systems","J. He; J. Zhang; J. Liu; X. Fu","Engineer Research Center for Intelligent Robotics, Ji Hua Laboratory, Foshan, China; Engineer Research Center for Intelligent Robotics, Ji Hua Laboratory, Foshan, China; Engineer Research Center for Intelligent Robotics, Ji Hua Laboratory, Foshan, China; Engineer Research Center for Intelligent Robotics, Ji Hua Laboratory, Foshan, China","2022 2nd International Conference on Computer, Control and Robotics (ICCCR)","14 Jun 2022","2022","","","98","102","With the development of industrial manufacturing towards flexibility and efficiency, the automation equipment, including manipulator, automated guide vehicle (AGV), Computer numerical control machine tools (CNC) and other intelligent individuals, has become an indispensable part of industrial system. In order to build a reliable and robust automation system rapidly, a reasonable software framework for controlling the automation equipment is necessary. To address this problem, this paper proposes a framework for construction of an industrial automation system. The system consists of 2 parts, which are motion control system (MCS) and OpenPLC. The MCS is based on ROS2, which provides real-time communication middleware. Furthermore, this paper implements new function blocks to connect OpenPLC and the MCS. With this system, it only needs OpenPLC language to realize the control rather than using different languages to control robots and other equipment in an automation line. In section 4, a simple use case is put forward. The experiment validated the correctness and feasibility of this framework.","","978-1-6654-6674-5","10.1109/ICCCR54399.2022.9790247","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9790247","robot;industrial automation system;ROS2;motion control system;OpenPLC","Motion planning;Automation;Protocols;Service robots;Production;Programming;Manipulators","automatic guided vehicles;computerised numerical control;control engineering computing;factory automation;machine tools;manipulators;middleware;motion control;programmable controllers","reliable automation system;robust automation system;reasonable software framework;automation equipment;industrial automation system;motion control system;MCS;control robots;automation line;ROS2-based framework;industrial manufacturing;automated guide vehicle;computer numerical control machine tools;real-time communication middleware;OpenPLC language","","","","15","IEEE","14 Jun 2022","","","IEEE","IEEE Conferences"
"A Recommendation for a Systems Engineering Process and System Architecture for UAS","U. Jahn; M. Stampa; A. Sutorma; F. Willich; J. Thiem; C. Röhrig; C. Wolff","Dortmund University of Applied Sciences and Arts, Dortmund, Germany; Dortmund University of Applied Sciences and Arts, Dortmund, Germany; Dortmund University of Applied Sciences and Arts, Dortmund, Germany; Dortmund University of Applied Sciences and Arts, Dortmund, Germany; Dortmund University of Applied Sciences and Arts, Dortmund, Germany; Dortmund University of Applied Sciences and Arts, Dortmund, Germany; Dortmund University of Applied Sciences and Arts, Dortmund, Germany","2020 IEEE 3rd International Conference and Workshop in Óbuda on Electrical and Power Engineering (CANDO-EPE)","9 Feb 2021","2020","","","000091","000096","The development of Unmanned Aircraft Systems (UAS) is complex and usually expensive, as commercial tools are often used, adapted from the development of (small) manned aircraft. To be sure that the authorities will approve the to be developed UAS, some steps within the Systems Engineering (SE) process are required, which are not yet defined in a UAS specific standard. This paper outlines a SE process to develop UAS with open-source tools and shows UAS specific tasks to be thought of, like SORA. The recommended SE process and a system architecture approach should lower the entrance level for small and medium-sized enterprises to develop their own UAS. Besides, frameworks, like ROS or OpenCV, that should be considered working with are briefly explained.","","978-1-7281-8491-3","10.1109/CANDO-EPE51100.2020.9337752","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9337752","Unmanned Aircraft System;UAS;Unmanned Aerial Vehicle;UAV;Systems Engineering;Architecture;Toolchain;Open-Source;Multi-Robot Systems","Power engineering;Systems architecture;Tools;Aircraft propulsion;Aircraft;Task analysis;Standards","aerospace computing;aircraft control;autonomous aerial vehicles;control engineering computing;mobile robots;public domain software;systems engineering","systems engineering process;unmanned aircraft systems;commercial tools;UAS;open-source tools;system architecture;SORA;ROS;OpenCV","","3","","43","IEEE","9 Feb 2021","","","IEEE","IEEE Conferences"
"Implementation of PLC controller connected Gazebo-ROS to support IEC 61131-3","Y. Kim; S. -y. Lee; S. Lim","Korea Electronics Technology Institute, Seongnam, Republic of Korea; Korea Electronics Technology Institute, Seongnam, Republic of Korea; Korea Electronics Technology Institute, Seongnam, Republic of Korea","2020 25th IEEE International Conference on Emerging Technologies and Factory Automation (ETFA)","5 Oct 2020","2020","1","","1195","1198","IEC61131-3 is an international standard related to programming languages used to develop PLC control systems. This paper introduces a system that can verify and validate a process automation program developed in compliance with IEC61131-3 using a 3D simulator. Robot driven commands and codes related to object manipulation communicate with Gazebo-ROS system to verify the automation program. To this end, the PLC controller and Gazebo-ROS exchange data using TCP/IP communication protocol and ROS nodes and Linux threads are developed to translate ROS-type messages into PLC controller messages. Gazebo-ROS integrated software architecture is developed after designing the task allocation algorithms using the IEC61131-3 language to verify the developed PLC program. In particular, the task allocation algorithms consist of three static algorithms, each of which is used for a specific scenario, and one dynamic algorithm that interchanges between the three static algorithms given some variation in the task scenarios.","1946-0759","978-1-7281-8956-7","10.1109/ETFA46521.2020.9212096","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9212096","PLC;IEC 61131-3;Gazebo-ROS;simulation;industrial automation;task allocation","Three-dimensional displays;Protocols;Software architecture;Heuristic algorithms;Software algorithms;TCPIP;Resource management","control engineering computing;IEC standards;Linux;programmable controllers;programming languages;software architecture;transport protocols","programming languages;PLC control systems;process automation program;Gazebo-ROS system;Gazebo-ROS exchange data;ROS-type messages;PLC controller messages;Gazebo-ROS integrated software architecture;task allocation algorithms;IEC61131-3 language;PLC program;TCP/IP communication protocol;ROS nodes;Linux threads;static algorithms;international standard;3D simulator;robot driven commands","","4","","7","IEEE","5 Oct 2020","","","IEEE","IEEE Conferences"
"Integrated virtual commissioning of a ROS2-based collaborative and intelligent automation system","E. Erős; M. Dahl; A. Hanna; A. Albo; P. Falkman; K. Bengtsson","Department of Electrical Engineering, Chalmers University of Technology, Gothenburg, Sweden; Department of Electrical Engineering, Chalmers University of Technology, Gothenburg, Sweden; Research & Technology Development, Volvo Group Trucks Operation, Gothenburg, Sweden; Department of Electrical Engineering, Chalmers University of Technology, Gothenburg, Sweden; Department of Electrical Engineering, Chalmers University of Technology, Gothenburg, Sweden; Department of Electrical Engineering, Chalmers University of Technology, Gothenburg, Sweden","2019 24th IEEE International Conference on Emerging Technologies and Factory Automation (ETFA)","17 Oct 2019","2019","","","407","413","In order to adapt to stricter system delivery and integration requirements, virtual commissioning (VC) has become a well adopted practice in industry. VC is getting increasingly integrated into the overall engineering process, where the control software is continuously tested with the virtual plant model. At the same time, collaborative and intelligent automation systems are becoming an important part of modern industries. In these complex systems, humans perform operations together with collaborative robots, intelligent machines and smart tools. However, performing VC of such complex, distributed and heterogeneous systems demands new ways of interfacing different hardware and software components. This paper discusses the requirements, process and results of integrated virtual commissioning of an industrial collaborative and intelligent automation system use-case. Moreover, this industrial use-case illustrates challenges and exemplifies the need to use the next generation Robot Operating System (ROS2) due to its robust communication layer as well as easy integration with smart devices and algorithms.","1946-0759","978-1-7281-0303-7","10.1109/ETFA.2019.8869444","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8869444","virtual commissioning;robot operating system;factory automation;control and communication architecture;intelligent automation;collaborative robot systems;human-in-the-loop","Robots;Collaboration;Control systems;Automation;Engines;Solid modeling;Tools","control engineering computing;mobile robots;multi-robot systems;production engineering computing;robot programming;software tools","virtual plant model;collaborative automation systems;intelligent automation systems;collaborative robots;intelligent machines;hardware components;software components;integrated virtual commissioning;intelligent automation system use-case;ROS2;system delivery;integration requirements;engineering process;control software;robot operating system;industrial use case;industrial collaborative automation systems;distributed systems demands;complex systems demands;smart tools;smart devices;robust communication layer","","11","","28","IEEE","17 Oct 2019","","","IEEE","IEEE Conferences"
"Development and Deployment of Complex Robotic Applications using Containerized Infrastructures","P. Melo; R. Arrais; G. Veiga","INESC TEC - INESC Technology and Science, FEUP campus, Porto, Portugal; INESC TEC - INESC Technology and Science, FEUP campus, Porto, Portugal; INESC TEC - INESC Technology and Science, FEUP campus, Porto, Portugal","2021 IEEE 19th International Conference on Industrial Informatics (INDIN)","11 Oct 2021","2021","","","1","8","There are significant difficulties in deploying and reusing application code within the robotics community. Container technology proves to be a viable solution for such problems, as containers isolate application code and all its dependencies from the surrounding computational environment. They are also light, fast and performant. Manual generation of configuration files required by orchestration tools such as Docker Compose is very time-consuming, especially for more complex scenarios. In this paper a solution is presented to ease the development and deployment of Robot Operating System (ROS) packages using containers, by automatically generating all files used by Docker Compose to both containerize and orchestrate multiple ROS workspaces, supporting multiple ROS distributions and multi-robot scenarios. The proposed solution also generates Dockerfiles and is capable of building new Docker images at run-time, given a list of desired ROS packages to be containerized. Integration with existing Docker images is supported, even if non-ROS-related. After an analysis of existing solutions and techniques for containerizing ROS nodes, the multi-stage pipeline adopted by the proposed solution for file generation is detailed. Then, a real usage example of the proposed tool is presented, showcasing how it an aid both the development and deployment of new ROS packages and features.","","978-1-7281-4395-8","10.1109/INDIN45523.2021.9557386","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9557386","Automation;Containers;Docker;Robotics;ROS","Codes;Service robots;Operating systems;Conferences;Pipelines;Buildings;Manuals","control engineering computing;mobile robots;multi-robot systems;operating systems (computers);path planning;public domain software;robot programming;service-oriented architecture;software packages","multiple ROS distributions;multirobot scenarios;desired ROS packages;existing Docker images;nonROS-related;ROS nodes;file generation;complex robotic applications;containerized infrastructures;significant difficulties;deploying reusing application code;robotics community;container technology;surrounding computational environment;manual generation;configuration files;orchestration tools;Docker Compose;Robot Operating System packages;containerize","","2","","15","IEEE","11 Oct 2021","","","IEEE","IEEE Conferences"
"Behavior Trees based Flexible Task Planner Built on ROS2 Framework","T. Ribeaud; C. Z. Sprenger","Department Technics and Informatics, Berner Fachhochschule, Burgdorf, Switzerland; Department Technics and Informatics, Berner Fachhochschule, Burgdorf, Switzerland","2022 IEEE 27th International Conference on Emerging Technologies and Factory Automation (ETFA)","25 Oct 2022","2022","","","1","4","As modern industrial robotic systems become smarter and more flexible, they are rather tailored for specific, large-scale applications, making its implementation too complex and costly for smaller operators. The ACROBA project aims to develop and demonstrate a novel concept of cognitive robotic platforms based on a modular approach able to be smoothly adapted to virtually any industrial scenario applying agile manufacturing principles. The flexible task planner introduced here is developed as part of this European project. It aims at providing a user-friendly tool allowing the user to reconfigure the robotic cell in quick and cheap way. The main characteristics of the task planner are the behavior tree-based control (which avoids the implementation of complex Functional States Machines), the embedded HMI interface (providing basic functionalities like start, pause, resume, manual selection of skill to run…), the embedded PDDL solver (which allows the task planner to automatically rewrite the task at run time based on factory or sensors inputs), an easy interface with a GUI to design the task manually, and a work-in-progress Assembly Sequence Planner (ASP)","","978-1-6654-9996-5","10.1109/ETFA52439.2022.9921683","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9921683","robotic task planning;behavior tree;HMI;PDDL;ROS;ASP","Runtime;Protocols;Service robots;Ontologies;Production facilities;Behavioral sciences;Sensors","agile manufacturing;control engineering computing;graphical user interfaces;industrial robots;mobile robots;path planning;user interfaces","trees;flexible task Planner built;ROS2;modern industrial robotic systems;large-scale applications;smaller operators;ACROBA project;cognitive robotic platforms;modular approach;virtually any industrial scenario;agile manufacturing principles;European project;user-friendly tool;robotic cell;behavior tree-based control;complex Functional States Machines;embedded HMI interface;work-in-progress Assembly Sequence Planner","","","","20","IEEE","25 Oct 2022","","","IEEE","IEEE Conferences"
